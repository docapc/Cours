// <auto-generated />
using System;
using EF_CodeFirst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CodeFirst.Migrations
{
    [DbContext(typeof(QuizContext))]
    [Migration("20220120084539_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Links", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReponseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_LinksId");

                    b.HasIndex("ReponseId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Model.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ThemeExId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_QuestionId");

                    b.HasIndex("ThemeExId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Model.Reponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReponseExplication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReponseText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isTrool")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_ReponseId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Reponses");
                });

            modelBuilder.Entity("Model.ThemeEx", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_ThemeId");

                    b.ToTable("ThemeEx");
                });

            modelBuilder.Entity("Model.Links", b =>
                {
                    b.HasOne("Model.Reponse", "Reponse")
                        .WithMany("Links")
                        .HasForeignKey("ReponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Link_In_Response");

                    b.Navigation("Reponse");
                });

            modelBuilder.Entity("Model.Question", b =>
                {
                    b.HasOne("Model.ThemeEx", "ThemeEx")
                        .WithMany("Questions")
                        .HasForeignKey("ThemeExId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Question_In_Theme");

                    b.Navigation("ThemeEx");
                });

            modelBuilder.Entity("Model.Reponse", b =>
                {
                    b.HasOne("Model.Question", "Question")
                        .WithMany("Reponses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Reponses_In_Question");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Model.Question", b =>
                {
                    b.Navigation("Reponses");
                });

            modelBuilder.Entity("Model.Reponse", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("Model.ThemeEx", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
