
body {
  background-color: antiquewhite;
}
/* la mixin est un genre de variable à réutiliser */
@mixin height-logo {
  height: 24px;
}

.btn-primary {
  background-color: darken($primary, 15%);
  color: lighten($default-font-color, 5%);
/* le & déclare l'élement parent (ici btn-primary) 
  hover est ici un évènement css (le :déclare un évènement
  . C'est un sélecteur comme '.')*/
  &:hover {
    background-color: lighten($primary, 10%);
    color: $default-font-color;
  }
}

.container-image {
  width: 140px;
  height: 140px;
  /* &. déclare une classe contenue dans une autre */
  &.logo {
    width: 24px;
    @include height-logo;
  }
  
  &.detail-avatar {
    width: 100%;
    height: 80vh;
  }

  &.home-avatar {
    width: 100%;
    height: 60vh;
  }

  &.avatar {
    width: 200px;
    height: 200px;
  }

  &.small-avatar {
    @include height-logo;
  }
/* le > désigne un contexte. si on a une balise <img
  dans une classe container image, alors ces règles s'appliquent */
  > img {
    width: 100%;
    height: 100%;
  }

}

.lifePoint-bar {
  @include height-logo;
  background-color: black;
  color: antiquewhite;
  max-width: 200px;
  position: relative;
  border-radius: 0.3em;

  .lifePoint-loss {
    @include height-logo;
    border-radius: 0.3em;
/* axe z : hauteur de la couche */
    > p {
      z-index: 1;
      position: absolute;
      left: 34%;
    }
  }
}
/* Classes sccs */
.lp-100 {
  background-color: $lp-100;
}
.lp-75 {
  background-color: $lp-75;
}
.lp-50 {
  background-color: $lp-50;
}
.lp-25 {
  background-color: $lp-25;
}

/* cursor pointer transform la sourie au survole */
.card-pokemon {
  cursor: pointer;
  .avatar:hover {
    transform: scale(1.1);
  }
}
